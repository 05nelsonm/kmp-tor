/*
 * Copyright (c) 2022 Matthew Nelson
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 **/
import io.matthewnelson.kotlin.components.dependencies.deps
import io.matthewnelson.kotlin.components.dependencies.versions
import kmp.tor.env

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

// disregard. this is for playing with newly published binaries prior to release
if (env.kmpTorBinaries.pollStagingRepo) {
    repositories {
        maven {
            url { "https://oss.sonatype.org/content/groups/staging" }
            credentials {
                username rootProject.ext.get("mavenCentralUsername").toString()
                password rootProject.ext.get("mavenCentralPassword").toString()
            }
        }
    }
}

android {
    compileSdk versions.android.sdkCompile
    buildToolsVersion versions.android.buildTools
    namespace "io.matthewnelson.kmp.tor.sample.java.android"

    // Needed for Tor binary file extraction to nativeDir
    packagingOptions.jniLibs.useLegacyPackaging true

    defaultConfig {
        applicationId "io.matthewnelson.kmp.tor.sample.java"
        minSdk versions.android.sdkMin21

        targetSdk versions.android.sdkTarget
        versionCode env.kmpTorAll.version.code
        versionName env.kmpTorAll.version.name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'
    }

    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    splits {

        // Configures multiple APKs based on ABI. This helps keep the size
        // down, since PT binaries can be large.
        abi {

            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify
            // that we only want APKs for x86 and x86_64, armeabi-v7a, and arm64-v8a.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "armeabi-v7a", "arm64-v8a", "x86_64"

            // Specify whether or not you wish to also generate a universal APK that
            // includes _all_ ABIs.
            universalApk true
        }
    }
}

// For SNAPSHOTS
repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    implementation deps.androidx.appCompat
    implementation deps.androidx.constraintLayout
    implementation deps.google.material

    // For SNAPSHOTS
//    implementation "io.matthewnelson.kotlin-components:kmp-tor:${env.kmpTorAll.version.name}"
//    implementation "io.matthewnelson.kotlin-components:kmp-tor-ext-callback-manager:${env.kmpTor.version.name}"

    implementation project(":library:kmp-tor")
    implementation project(":library:extensions:kmp-tor-ext-callback-manager")

    // Even through kmp-tor comes with coroutines under the hood
    // and expressing the dependency is _not_ needed in kotlin
    // projects, it _is_ needed in Java only projects.
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin.coroutines}"
}
