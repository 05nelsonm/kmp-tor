[versions]
#noinspection GradleDependency
androidx-startup            = "1.1.1" # Do not upgrade. Next version requires minSdk 21+
#noinspection GradleDependency
androidx-test-core          = "1.5.0" # Do not upgrade. Next version requires minSdk 19+
#noinspection GradleDependency
androidx-test-runner        = "1.5.2" # Do not upgrade. Next version requires minSdk 19+

encoding                    = "2.4.0"

gradle-android              = "8.7.3"
gradle-binary-compat        = "0.17.0"
gradle-dokka                = "1.9.20"
gradle-kmp-configuration    = "0.4.0"
gradle-kotlin               = "2.1.10"
gradle-publish-maven        = "0.30.0"

immutable                   = "0.2.0-SNAPSHOT"

kmp-process                 = "0.2.0-SNAPSHOT"
kmp-tor-common              = "2.1.2"
kmp-tor-resource            = "408.13.2"
kotlincrypto-catalog        = "0.7.0-SNAPSHOT" # Utilized from settings.gradle.kts
kotlinx-coroutines          = "1.10.1"
ktor                        = "3.1.0"

okio                        = "3.10.2"

[libraries]
androidx-startup-runtime    = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }

encoding-base16             = { module = "io.matthewnelson.encoding:base16", version.ref = "encoding" }
encoding-base32             = { module = "io.matthewnelson.encoding:base32", version.ref = "encoding" }
encoding-base64             = { module = "io.matthewnelson.encoding:base64", version.ref = "encoding" }

gradle-android              = { module = "com.android.tools.build:gradle", version.ref = "gradle-android" }
gradle-dokka                = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "gradle-dokka" }
gradle-kmp-configuration    = { module = "io.matthewnelson:gradle-kmp-configuration-plugin", version.ref = "gradle-kmp-configuration" }
gradle-kotlin               = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "gradle-kotlin" }
gradle-publish-maven        = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "gradle-publish-maven" }

immutable-collections       = { module = "io.matthewnelson.immutable:collections", version.ref = "immutable" }

kmp-process                 = { module = "io.matthewnelson.kmp-process:process", version.ref = "kmp-process" }
kmp-tor-common-api          = { module = "io.matthewnelson.kmp-tor:common-api", version.ref = "kmp-tor-common" }
kmp-tor-common-core         = { module = "io.matthewnelson.kmp-tor:common-core", version.ref = "kmp-tor-common" }
kotlinx-coroutines-core     = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android  = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

# Tests Only
androidx-test-core          = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-runner        = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }

kmp-tor-resource-exec-tor   = { module = "io.matthewnelson.kmp-tor:resource-exec-tor", version.ref = "kmp-tor-resource" }
kmp-tor-resource-noexec-tor = { module = "io.matthewnelson.kmp-tor:resource-noexec-tor", version.ref = "kmp-tor-resource" }
kmp-tor-resource-android-unit-test-tor = { module = "io.matthewnelson.kmp-tor:resource-android-unit-test-tor", version.ref = "kmp-tor-resource" }
kotlinx-coroutines-test     = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
ktor-network                = { module = "io.ktor:ktor-network", version.ref = "ktor" }

okio-okio                   = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-node                   = { module = "com.squareup.okio:okio-nodefilesystem", version.ref = "okio" }

[plugins]
android-library             = { id = "com.android.library", version.ref = "gradle-android" }
binary-compat               = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "gradle-binary-compat" }
dokka                       = { id = "org.jetbrains.dokka", version.ref = "gradle-dokka" }
kotlin-multiplatform        = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "gradle-kotlin" }
